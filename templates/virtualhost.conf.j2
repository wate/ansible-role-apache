# ------------------------
# {{ ansible_managed }}
# ------------------------
{% if vhost_setting.server_name is defined -%}
# {{ vhost_setting.server_name }} VirtualHost Setting
{% endif -%}
{% if vhost_setting.virtualhost_before_setting is defined %}
{{ vhost_setting.virtualhost_before_setting }}
{% endif %}
{% if vhost_setting.ssl.certificate_file is defined %}
<VirtualHost {{ vhost_setting.default_server |default(false) | ternary('_default_', "*") }}:80>
    {% if vhost_setting.server_name is defined -%}
    ServerName {{ vhost_setting.server_name }}
    {% endif -%}
    {% if vhost_setting.server_alias is defined -%}
    ServerAlias {{ vhost_setting.server_alias is string | ternary(vhost_setting.server_alias, vhost_setting.server_alias | join(' ')) }}
    {% endif -%}
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/\.well\-known/acme\-challenge/
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
</VirtualHost>
{% endif %}

{% set vhost_ip = vhost_setting.default_server | default(false) | ternary('_default_', "*") -%}
{% if vhost_setting.ip is defined -%}
{% set vhost_ip = vhost_setting.ip -%}
{% endif -%}

{% set vhost_port = vhost_setting.ssl.certificate_file is defined | ternary('443', "80") -%}
{% if vhost_setting.port is defined -%}
{% set vhost_port = vhost_setting.port -%}
{% endif -%}

<VirtualHost {{ vhost_ip }}:{{ vhost_port }}>
  {% if vhost_setting.server_name is defined -%}
  ServerName {{ vhost_setting.server_name }}
  {% endif -%}
  {% if vhost_setting.server_alias is defined -%}
  ServerAlias {{ vhost_setting.server_alias is string | ternary(vhost_setting.server_alias, vhost_setting.server_alias | join(' ')) }}
  {% endif -%}
  {% if vhost_setting.include is defined -%}
  {% for include_file in vhost_setting.include -%}
  Include {{ include_file }}
  {% endfor -%}
  {% endif -%}
  {% if vhost_setting.document_root is defined -%}
  DocumentRoot {{ vhost_setting.document_root }}
  <Directory {{ vhost_setting.document_root }}>
    {% if vhost_setting.options is defined -%}
    Options {{ vhost_setting.options is string | ternary(vhost_setting.options, vhost_setting.options | join(' ')) }}
    {% endif -%}

    {% if vhost_setting.allow_override is defined -%}
    AllowOverride {{ vhost_setting.allow_override }}
    {% endif -%}

    {% if vhost_setting.require is defined -%}
    {% for directive in vhost_setting.require -%}
    Require {{ directive.not | default(false) | ternary('not ', '') }}{{ directive.type }} {{ directive.value }}
    {% endfor -%}
    {% else -%}
    Require all granted
    {% endif -%}
  </Directory>
  {% endif -%}

  {% if vhost_setting.alias is defined -%}
  {% for directive in vhost_setting.alias -%}
  Alias {{ directive.from }} {{ directive.to }}
  {% endfor -%}
  {% endif -%}

  {% if vhost_setting.directory_index is defined -%}
  DirectoryIndex {{ vhost_setting.directory_index is string | ternary(vhost_setting.directory_index, vhost_setting.directory_index | join(' ')) }}
  {% endif -%}

  {% if vhost_setting.custom_log is defined -%}
  {% if vhost_setting.custom_log.env is defined %}
  CustomLog {{ vhost_setting.custom_log.path }} {{ vhost_setting.custom_log.format }} env={{ vhost_setting.custom_log.env }}
  {% else -%}
  CustomLog {{ vhost_setting.custom_log.path }} {{ vhost_setting.custom_log.format }}
  {% endif -%}
  {% endif -%}

  {% if vhost_setting.error_log is defined -%}
  ErrorLog {{ vhost_setting.error_log.path }}
  LogLevel {{ vhost_setting.error_log.log_level | default('warn') }}
  {% endif -%}

  {% if vhost_setting.transfer_log is defined -%}
  {% if vhost_setting.transfer_log.format is defined -%}
  LogFormat "{{ vhost_setting.transfer_log.format }}"
  {% endif -%}
  TransferLog {{ vhost_setting.transfer_log.path }}
  {% endif -%}

  {% if vhost_setting.proxy_pass is defined -%}
  {% for directive in vhost_setting.proxy_pass -%}
  ProxyPass {{ directive.from }} {{ directive.to }}
  {% endfor -%}
  {% endif -%}

  {% if vhost_setting.proxy_pass_reverse is defined -%}
  {% for directive in vhost_setting.proxy_pass_reverse -%}
  ProxyPassReverse {{ directive.from }} {{ directive.to }}
  {% endfor -%}
  {% endif -%}

  {% if vhost_setting.proxy_pass_match is defined -%}
  {% for directive in vhost_setting.proxy_pass_match -%}
  ProxyPassMatch {{ directive.pattern }} {{ directive.to }}
  {% endfor -%}
  {% endif -%}

  {% if vhost_setting.ssl.certificate_file is defined -%}
  SSLEngine on
  # Server Certificate:
  SSLCertificateFile {{ vhost_setting.ssl.certificate_file }}
  # Server Private Key:
  SSLCertificateKeyFile {{ vhost_setting.ssl.certificate_key_file }}
  {% if vhost_setting.ssl.certificate_chain_file is defined -%}
  # Server Certificate Chain:
  SSLCertificateChainFile {{ vhost_setting.ssl.certificate_chain_file }}
  {% endif -%}

  {% if vhost_setting.ssl.protocol is defined -%}
  SSLProtocol {{ vhost_setting.ssl.protocol | join(' ') }}
  {% endif -%}

  {% if vhost_setting.ssl.cipher_suite is defined -%}
  SSLCipherSuite {{ vhost_setting.ssl.cipher_suite | join(':') }}
  {% endif -%}

  {% if vhost_setting.ssl.honor_cipher_order is defined -%}
  SSLHonorCipherOrder {{ vhost_setting.ssl.honor_cipher_order | ternary('on', 'off') }}
  {% endif -%}

  {% if vhost_setting.ssl.compression is defined -%}
  SSLCompression {{ vhost_setting.ssl.compression | ternary('on', 'off') }}
  {% endif -%}

  {% if vhost_setting.ssl.stapling_responder_timeout is defined -%}
  SSLStaplingResponderTimeout {{ vhost_setting.ssl.stapling_responder_timeout }}
  {% endif -%}

  {% if vhost_setting.ssl.stapling_return_responder_errors is defined -%}
  SSLStaplingReturnResponderErrors {{ vhost_setting.ssl.stapling_return_responder_errors | ternary('on', 'off') }}
  {% endif -%}

  {% if vhost_setting.ssl.stapling_cache is defined -%}
  SSLStaplingCache {{ vhost_setting.ssl.stapling_cache }}
  {% endif -%}

  {% if vhost_setting.ssl.hsts is defined -%}
  Header always set Strict-Transport-Security "{{ vhost_setting.ssl.hsts }}"
  {% endif -%}
  {% endif -%}

  {% if vhost_setting.extra_setting is defined -%}
  {{ vhost_setting.extra_setting | indent(2) }}
  {% endif -%}
</VirtualHost>
